#ifndef ARDUINO_COMMON_H
#define ARDUINO_COMMON_H

// ================================================================
// ========================= INCLUDES =============================
// ================================================================

#include <Arduino.h>
#include "cjson/cJSON.h"
#include "smarthub_protocol.h"

// ================================================================
// =================== CONSTANTS & DEFINES ========================
// ================================================================

// Пины для подключения ультразвукового датчика расстояния
#define TRIGGER_PIN     9
#define ECHO_PIN        10

// Размер буфера для приема команд от хаба по Serial-порту
#define SERIAL_BUFFER_SIZE 256

// ================================================================
// ==================== GLOBAL VARIABLES ==========================
// ================================================================

extern volatile int   g_is_door_open;
extern volatile int   g_is_alarm_enabled;
extern volatile int   g_is_motion_detected;

// ================================================================
// ========================= FUNCTION PROTOTYPES =================
// ================================================================

// ------------------------------------------------
// Измеряет расстояние с помощью ультразвукового датчика.
// Возвращает расстояние в сантиметрах.
// ------------------------------------------------
int current_distance_cm(uint8_t trigger_pin,uint8_t echo_pin);

// ------------------------------------------------
// Проверяет Serial-порт на наличие входящих данных,
// собирает их в строку и передает на обработку.
// ------------------------------------------------
void check_serial_for_command(void);

// ------------------------------------------------
// Инициализирует (заранее создает) все JSON-строки,
// которые Arduino будет отправлять хабу.
// ------------------------------------------------
void setup_json_responses(void);

// ------------------------------------------------
// Парсит входящую JSON-команду, выполняет
// соответствующее действие и отправляет ответ.
// ------------------------------------------------
void process_json_command(char* command_str);

// ------------------------------------------------
// Отправляет хабу JSON-сообщение о том,
// что было обнаружено движение.
// ------------------------------------------------
void send_motion_detected_event(void);

// ------------------------------------------------
// Отправляет хабу JSON-сообщение с полным текущим
// состоянием устройства для синхронизации.
// ------------------------------------------------
void send_full_state_response(void);

#endif